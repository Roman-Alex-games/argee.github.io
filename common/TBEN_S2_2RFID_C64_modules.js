var modules_TBEN_S2_2RFID_C64=
[{
	mod_name:"DXP",
	mod_id:0x82082,
	sections:
	[
	{
		sect_name:"Param",
		num_elems:2,
		datapoints:
		[
		{
			name:"Manual output reset after overcurr.",
			category:"DXP",
			chan_unit:"Channel",
			bitOffset:4,
			bitLen:1,
			bitIncremental:1,
			channelNumStart:4,
			channelNumEnd:7,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Activate output",
			category:"DXP",
			chan_unit:"Channel",
			bitOffset:12,
			bitLen:1,
			bitIncremental:1,
			channelNumStart:4,
			channelNumEnd:7,
			dataType:1,
			enumLen:2,
			defaultValue:1,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		],
	max_size:16,
	},
	{
		sect_name:"Diag",
		num_elems:3,
		datapoints:
		[
		{
			name:"Overcurrent VAUX2 Ch4/5",
			category:"DXP",
			chan_unit:"",
			bitOffset:2,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Overcurrent VAUX2 Ch6/7",
			category:"DXP",
			chan_unit:"",
			bitOffset:3,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Overcurrent output",
			category:"DXP",
			chan_unit:"Channel",
			bitOffset:12,
			bitLen:1,
			bitIncremental:1,
			channelNumStart:4,
			channelNumEnd:7,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		],
	max_size:16,
	},
	{
		sect_name:"Input",
		num_elems:1,
		datapoints:
		[
		{
			name:"Input value",
			category:"DXP",
			chan_unit:"Channel",
			bitOffset:4,
			bitLen:1,
			bitIncremental:1,
			channelNumStart:4,
			channelNumEnd:7,
			dataType:2,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"off",
				1,
				"on",
				],
		},
		],
	max_size:8,
	},
	{
		sect_name:"Output",
		num_elems:1,
		datapoints:
		[
		{
			name:"Output value",
			category:"DXP",
			chan_unit:"Channel",
			bitOffset:4,
			bitLen:1,
			bitIncremental:1,
			channelNumStart:4,
			channelNumEnd:7,
			dataType:2,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"off",
				1,
				"on",
				],
		},
		],
	max_size:8,
	},
	]
},
{
	mod_name:"DXP diagnostics",
	mod_id:0x3080000,
	sections:
	[
	{
		sect_name:"Param",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	{
		sect_name:"Diag",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	{
		sect_name:"Input",
		num_elems:3,
		datapoints:
		[
		{
			name:"Overcurrent VAUX2 Ch4/5",
			category:"DXP",
			chan_unit:"",
			bitOffset:2,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Overcurrent VAUX2 Ch6/7",
			category:"DXP",
			chan_unit:"",
			bitOffset:3,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Overcurrent output",
			category:"DXP",
			chan_unit:"Channel",
			bitOffset:12,
			bitLen:1,
			bitIncremental:1,
			channelNumStart:4,
			channelNumEnd:7,
			dataType:2,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		],
	max_size:16,
	},
	{
		sect_name:"Output",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	]
},
{
	mod_name:"Ext. DXP functions",
	mod_id:0x1000080,
	sections:
	[
	{
		sect_name:"Param",
		num_elems:3,
		datapoints:
		[
		{
			name:"Extended digital mode",
			category:"DXP extended",
			chan_unit:"",
			bitOffset:0,
			bitLen:7,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"deactivated",
				1,
				"digital filter and impulse stretch",
				],
		},
		{
			name:"Input filter",
			category:"DXP extended",
			chan_unit:"",
			bitOffset:7,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"0.2 ms",
				1,
				"3 ms",
				],
		},
		{
			name:"Impulse stretch (*10ms)",
			category:"DXP extended",
			chan_unit:"",
			bitOffset:8,
			bitLen:8,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:0,
			enumLen:0,
			defaultValue:0,
			enumValues:
				[
				],
		},
		],
	max_size:16,
	},
	{
		sect_name:"Diag",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	{
		sect_name:"Input",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	{
		sect_name:"Output",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	]
},
{
	mod_name:"RFID diagnostics",
	mod_id:0x2680000,
	sections:
	[
	{
		sect_name:"Param",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	{
		sect_name:"Diag",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	{
		sect_name:"Input",
		num_elems:16,
		datapoints:
		[
		{
			name:"Overcurrent supply VAUX1",
			category:"CH0 diagnosis",
			chan_unit:"",
			bitOffset:7,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Parameterization error",
			category:"CH0 diagnosis",
			chan_unit:"",
			bitOffset:6,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Configuration via DTM active",
			category:"CH0 diagnosis",
			chan_unit:"",
			bitOffset:5,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Buffer full",
			category:"CH0 diagnosis",
			chan_unit:"",
			bitOffset:4,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Antenna detuned at HF read/write head",
			category:"CH0 diagnosis",
			chan_unit:"",
			bitOffset:36,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Parameter not supported by read/write head",
			category:"CH0 diagnosis",
			chan_unit:"",
			bitOffset:37,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Error reported by read/write head",
			category:"CH0 diagnosis",
			chan_unit:"",
			bitOffset:38,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Not connected to read/write head",
			category:"CH0 diagnosis",
			chan_unit:"",
			bitOffset:39,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Overcurrent supply VAUX1",
			category:"CH1 diagnosis",
			chan_unit:"",
			bitOffset:295,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Parameterization error",
			category:"CH1 diagnosis",
			chan_unit:"",
			bitOffset:294,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Configuration via DTM active",
			category:"CH1 diagnosis",
			chan_unit:"",
			bitOffset:293,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Buffer full",
			category:"CH1 diagnosis",
			chan_unit:"",
			bitOffset:292,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Antenna detuned at HF read/write head",
			category:"CH1 diagnosis",
			chan_unit:"",
			bitOffset:324,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Parameter not supported by read/write head",
			category:"CH1 diagnosis",
			chan_unit:"",
			bitOffset:325,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Error reported by read/write head",
			category:"CH1 diagnosis",
			chan_unit:"",
			bitOffset:326,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Not connected to read/write head",
			category:"CH1 diagnosis",
			chan_unit:"",
			bitOffset:327,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:1,
			channelNumEnd:1,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		],
	max_size:328,
	},
	{
		sect_name:"Output",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	]
},
{
	mod_name:"RFID control/status",
	mod_id:0x5410493,
	sections:
	[
	{
		sect_name:"Param",
		num_elems:8,
		datapoints:
		[
		{
			name:"Operation mode",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:0,
			bitLen:8,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:1,
			enumValues:
				[
				1,
				"HF compact",
				4,
				"UHF compact",
				],
		},
		{
			name:"HF: Select Tag type",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:8,
			bitLen:8,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:27,
			defaultValue:0,
			enumValues:
				[
				0,
				"automatic tag detection HF",
				1,
				"1: NXP Icode SLIX",
				2,
				"2: Fujitsu MB89R118",
				3,
				"3: TI Tag-it HF-I Plus",
				4,
				"4: Infineon SRF55V02P",
				5,
				"5: NXP Icode SLIX-S",
				6,
				"6: Fujitsu MB89R119",
				7,
				"7: TI Tag-it HF-I",
				8,
				"8: Infineon SRF55V10P",
				11,
				"11: NXP Icode SLIX-L",
				12,
				"12: Fujitsu MB89R112",
				13,
				"13: EM4233SLIC",
				14,
				"14: NXP SLIX2",
				15,
				"15: TI Tag-it HFI Pro",
				16,
				"16: Turck Sensor Tag",
				17,
				"17: Infineon SRF55V02S",
				18,
				"18: Infineon SRF55V10S",
				19,
				"19: EM4233",
				20,
				"20: EM4237",
				21,
				"21: EM4237 SLIC",
				22,
				"22: EM4237 SLIX",
				23,
				"23: EM4033",
				24,
				"24: reserved",
				25,
				"25: reserved",
				26,
				"26: reserved",
				27,
				"27: reserved",
				28,
				"28: reserved",
				],
		},
		{
			name:"HF: Bypass time (*1ms)",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:16,
			bitLen:16,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:0,
			enumLen:0,
			defaultValue:200,
			enumValues:
				[
				],
		},
		{
			name:"HF: Autotuning read/write head",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:39,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Deactivate HF detuned diagnostic",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:40,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Deactivate diagnostics",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:47,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Command retries at failure",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:64,
			bitLen:8,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:0,
			enumLen:0,
			defaultValue:2,
			enumValues:
				[
				],
		},
		{
			name:"HF: Idle mode",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:48,
			bitLen:8,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:5,
			defaultValue:0,
			enumValues:
				[
				0,
				"UID",
				1,
				"8 bytes user memory",
				2,
				"UID + 8 bytes user memory",
				3,
				"UID + 64 bytes user memory",
				4,
				"deactivated",
				],
		},
		],
	max_size:72,
	},
	{
		sect_name:"Diag",
		num_elems:8,
		datapoints:
		[
		{
			name:"Overcurrent supply VAUX1",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:7,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Parameterization error",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:6,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Configuration via DTM active",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:5,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Buffer full",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:4,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Antenna detuned at HF read/write head",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:36,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Parameter not supported by read/write head",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:37,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Error reported by read/write head",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:38,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Not connected to read/write head",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:39,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		],
	max_size:40,
	},
	{
		sect_name:"Input",
		num_elems:10,
		datapoints:
		[
		{
			name:"Response code",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:0,
			bitLen:16,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:110,
			defaultValue:0,
			enumValues:
				[
				0,
				"0x0000 Idle",
				1,
				"0x0001 Inventory",
				2,
				"0x0002 Read",
				4,
				"0x0004 Write",
				7,
				"0x0007 Change EPC length and write new EPC (UHF)",
				8,
				"0x0008 Write and Verify",
				16,
				"0x0010 Continuous Mode",
				17,
				"0x0011 Read buffer (Cont. Mode)",
				18,
				"0x0012 Stop Continuous (Presence Sensing) Mode",
				32,
				"0x0020 UHF Continuous Presence Sensing Mode",
				64,
				"0x0040 HF Read/write head off",
				65,
				"0x0041 Read/write head identification",
				66,
				"0x0042 Get UHF read/write head status/error",
				80,
				"0x0050 Tag info",
				96,
				"0x0060 Direct read/write head command",
				112,
				"0x0070 Get HF read/write head address",
				113,
				"0x0071 Set HF read/write head address",
				128,
				"0x0080 Tune HF read/write head",
				256,
				"0x0100 Set read/write head password",
				257,
				"0x0101 Reset read/write head password",
				258,
				"0x0102 Set tag password",
				259,
				"0x0103 Set tag protection",
				260,
				"0x0104 Get HF tag protection status",
				261,
				"0x0105 Set perma lock",
				512,
				"0x0200 Kill UHF tag",
				4096,
				"0x1000 Restore settings UHF read/write head",
				4097,
				"0x1001 Backup settings UHF read/write head",
				8193,
				"0x2001 Inventory with loop counter",
				8194,
				"0x2002 Read with loop counter",
				8196,
				"0x2004 Write with loop counter",
				8209,
				"0x2011 Read buffer (Cont. Mode) with loop counter",
				8272,
				"0x2050 Tag info with loop counter",
				8288,
				"0x2060 Direct read/write head command with loop counter",
				8450,
				"0x2102 Set tag password with loop counter",
				8451,
				"0x2103 Set tag protection with loop counter",
				8453,
				"0x2105 Set permanent lock with loop counter",
				8704,
				"0x2200 Kill UHF tag with loop counter",
				16385,
				"0x4001 Error - Inventory",
				16386,
				"0x4002 Error - Read",
				16388,
				"0x4004 Error - Write",
				16391,
				"0x4007 Error - Change EPC length and write new EPC (UHF)",
				16392,
				"0x4008 Error - Write and Verify",
				16400,
				"0x4010 Error - Continuous Mode",
				16401,
				"0x4011 Error - Read buffer (Cont. Mode)",
				16402,
				"0x4012 Error - Stop Continuous (Presence Sensing) Mode",
				16416,
				"0x4020 Error - UHF Continuous Presence Sensing Mode",
				16448,
				"0x4040 Error - HF Read/write head off",
				16449,
				"0x4041 Error - Read/write head identification",
				16450,
				"0x4042 Error - Get UHF read/write head status/error",
				16464,
				"0x4050 Error - Tag info",
				16480,
				"0x4060 Error - Direct read/write head command",
				16496,
				"0x4070 Error - Get HF read/write head address",
				16497,
				"0x4071 Error - Set HF read/write head address",
				16512,
				"0x4080 Error - Tune HF Read/write head",
				16640,
				"0x4100 Error - Set read/write head password",
				16641,
				"0x4101 Error - Reset read/write head password",
				16642,
				"0x4102 Error - Set tag password",
				16643,
				"0x4103 Error - Set tag protection",
				16644,
				"0x4104 Error - Get HF tag protection status",
				16645,
				"0x4105 Error - Set perma lock",
				16896,
				"0x4200 Error - Kill UHF tag",
				20480,
				"0x5000 Error - Restore settings UHF read/write head",
				20481,
				"0x5001 Error - Backup settings UHF read/write head",
				24577,
				"0x6001 Error - Inventory with loop counter",
				24578,
				"0x6002 Error - Read with loop counter",
				24580,
				"0x6004 Error - Write with loop counter",
				24593,
				"0x6011 Error - Read buffer (Cont. Mode) with loop counter",
				24656,
				"0x6050 Error - Tag info with loop counter",
				24672,
				"0x6060 Error - Direct read/write head command with loop counter",
				24834,
				"0x6102 Error - Set tag password with loop counter",
				24835,
				"0x6103 Error - Set tag protection with loop counter",
				24837,
				"0x6105 Error - Set permanent lock with loop counter",
				25088,
				"0x6200 Error - Kill UHF tag with loop counter",
				32768,
				"0x8000 Busy - Reset",
				32769,
				"0x8001 Busy - Inventory",
				32770,
				"0x8002 Busy - Read",
				32772,
				"0x8004 Busy - Write",
				32775,
				"0x8007 Busy - Change EPC length and write new EPC (UHF)",
				32776,
				"0x8008 Busy - Write and Verify",
				32784,
				"0x8010 Busy - Continuous Mode",
				32785,
				"0x8011 Busy - Read buffer (Cont. Mode)",
				32786,
				"0x8012 Busy - Stop Continuous (Presence Sensing) Mode",
				32800,
				"0x8020 Busy - UHF Continuous Presence Sensing Mode",
				32832,
				"0x8040 Busy - HF Read/write head off",
				32833,
				"0x8041 Busy - Read/write head identification",
				32834,
				"0x8042 Busy - Get UHF read/write head status/error",
				32848,
				"0x8050 Busy - Tag info",
				32864,
				"0x8060 Busy - Direct read/write head command",
				32880,
				"0x8070 Busy - Get HF read/write head address",
				32881,
				"0x8071 Busy - Set HF read/write head address",
				32896,
				"0x8080 Busy - Tune HF Read/write head",
				33024,
				"0x8100 Busy - Set read/write head password",
				33025,
				"0x8101 Busy - Reset read/write head password",
				33026,
				"0x8102 Busy - Set tag password",
				33027,
				"0x8103 Busy - Set tag protection",
				33028,
				"0x8104 Busy - Get HF tag protection status",
				33029,
				"0x8105 Busy - Set perma lock",
				33280,
				"0x8200 Busy - Kill UHF tag",
				36864,
				"0x9000 Busy - Restore settings UHF read/write head",
				36865,
				"0x9001 Busy - Backup settings UHF read/write head",
				40961,
				"0xA001 Busy - Inventory with loop counter",
				40962,
				"0xA002 Busy - Read with loop counter",
				40964,
				"0xA004 Busy - Write with loop counter",
				40977,
				"0xA011 Busy - Read buffer (Cont. Mode) with loop counter",
				41040,
				"0xA050 Busy - Tag info with loop counter",
				41056,
				"0xA060 Busy - Direct read/write head command with loop counter",
				41218,
				"0xA102 Busy - Set tag password with loop counter",
				41219,
				"0xA103 Busy - Set tag protection with loop counter",
				41221,
				"0xA105 Busy - Set permanent lock with loop counter",
				41472,
				"0xA200 Busy - Kill UHF tag with loop counter",
				],
		},
		{
			name:"Tag present at r/w head",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:32,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"HF r/w head switched on",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:40,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Antenna detuned at HF read/write head",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:36,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Parameter not supported by read/write head",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:37,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Error reported by read/write head",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:38,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Not connected to read/write head",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:39,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"no",
				1,
				"yes",
				],
		},
		{
			name:"Length",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:48,
			bitLen:16,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:0,
			enumLen:0,
			defaultValue:0,
			enumValues:
				[
				],
		},
		{
			name:"Error code",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:64,
			bitLen:16,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:152,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				2049,
				"Write or read error",
				8192,
				"Kill command not successful",
				8704,
				"Automatic tuning active",
				8705,
				"Tuning failed",
				8706,
				"Antenna detuned",
				9472,
				"Password function of the tag not supported",
				9473,
				"Password function not supported by read/write head",
				9474,
				"Tag protection bit pattern not supported",
				10496,
				"Address outside of the block limits",
				10497,
				"Length outside of the block limits",
				32768,
				"Channel not active",
				32769,
				"Read/write head not connected",
				32770,
				"Memory full",
				32771,
				"Block size of the tag not supported",
				32772,
				"Length larger than the size of the read  fragment",
				32773,
				"Length larger than the size of the write fragment",
				32774,
				"Read/write head does not support bus mode",
				32775,
				"For addressing, only one read/write head may be connected.",
				32776,
				"Fragmentation must start with Write fragment No. 1",
				32777,
				"Fragmentation incomplete. Write fragment No. &gt; 0 expected",
				33021,
				"-Bypass time- parameter outside of the permissible range",
				33022,
				"-Address- parameter in Continuous mode outside of the permissible range",
				33023,
				"No read/write head selected",
				33024,
				"Parameter undefined",
				33025,
				"-Operating mode- outside of the permissible range",
				33026,
				"-Tag type- parameter outside of the permissible range",
				33027,
				"-Operating mode- parameter in Continuous mode outside of the permissible range",
				33028,
				"-Length- parameter in Continuous mode outside of the permissible range",
				33029,
				"Size of the write fragment outside of the permissible range",
				33030,
				"Size of the read fragment outside of the permissible range",
				33280,
				"Command code unknown",
				33281,
				"Command not supported",
				33282,
				"Command not supported in HF applications",
				33283,
				"Command not supported in UHF applications",
				33284,
				"Command for multitag application with automatic tag detection not supported",
				33285,
				"Command for applications with automatic tag detection not supported",
				33286,
				"Command only supported for applications with automatic tag detection",
				33287,
				"Command not supported for multitag application",
				33288,
				"Command not supported in HF bus mode",
				33289,
				"-Length- parameter outside of the permissible range",
				33290,
				"Address outside of the permissible range",
				33291,
				"Length and address outside of the permissible range",
				33292,
				"No tag found",
				33293,
				"Timeout",
				33294,
				"Next command not supported in multitag mode",
				33295,
				"Length of the UID outside of the permissible range",
				33296,
				"Length outside of the tag specification",
				33297,
				"Address outside of the tag specification",
				33298,
				"Length and address outside of the tag specification",
				33299,
				"Memory area of the tag outside of the permissible range",
				33300,
				"Read/write head address outside of the permissible range",
				33301,
				"Value for timeout outside of the permissible range",
				33302,
				"Command not supported outside HF bus mode",
				33303,
				"Read/write head address invalid",
				33536,
				"Continuous mode command not activated",
				33537,
				"Grouping not supported in HF applications",
				33538,
				"Grouping not supported for read commands",
				33540,
				"Grouping not supported for write commands",
				33541,
				"-HF: Length in continuous mode- breaches block boundaries",
				33542,
				"-HF: Address in continuous mode- breaches block boundaries",
				33543,
				"-HF: Length in continuous mode- outside of the permissible range",
				45128,
				"Error when switching on the HF read/write head",
				45129,
				"Error when switching off the HF read/write head",
				45152,
				"Error with the advanced parameter setting of the HF read/write head",
				45153,
				"Error with the parameter setting of the HF read/write head",
				45154,
				"Read/write head error when executing an inventory command",
				45159,
				"Read/write head error when executing a lock block command",
				45160,
				"Read/write head error when executing a read multiple block command",
				45161,
				"Read/write head error when executing a write multiple block command",
				45162,
				"Error when reading the system information",
				45163,
				"Error when reading the protection status of the tags",
				45229,
				"Error when setting the HF read/write head address",
				45235,
				"Error when setting the tag password",
				45238,
				"Error when setting the write or read protection",
				45240,
				"Error when reading the protection status of the memory area on the tag",
				45245,
				"Error when setting the transfer rate",
				45251,
				"Error when setting the password in the read/write head",
				45274,
				"Error with the -Tag in detection range-",
				45280,
				"Error when reading the HF read/write head version",
				45281,
				"Error when reading the advanced read/write head version",
				45297,
				"Error with automatic read/write head tuning",
				45304,
				"Error when resetting a command in Continuous mode",
				45306,
				"Error when outputting the response code",
				45311,
				"Error when resetting the read/write head",
				49152,
				"Internal error (response of the read/write head too short)",
				49153,
				"Command not supported by read/write head version",
				53249,
				"Error when resetting the UHF read/write head",
				53250,
				"Error when reading the UHF read/write head version",
				53251,
				"Error when reading the read/write head version when a tag is in the detection range",
				53252,
				"Error when setting the UHF read/write head address",
				53257,
				"Error with the parameter setting of the UHF read/write head",
				53258,
				"Error setting the transfer speed and the operating mode of the UHF read/write head",
				53259,
				"Error when polling",
				53261,
				"Error when reading the device status",
				53262,
				"Error when resetting the internal status bit",
				53263,
				"Error when setting the read/write head outputs and/or LEDs",
				53265,
				"Error when reading the internal malfunctions",
				53268,
				"Diagnostics error",
				53270,
				"Error with the heartbeat message",
				53271,
				"Error when outputting the user settings",
				53275,
				"Error when emptying the message memory in Polling mode",
				53377,
				"Error when switching turning on/off UHF-carrier",
				53379,
				"Error when reading from a tag",
				53380,
				"Error when writing to a tag",
				53381,
				"Software trigger error",
				53384,
				"Error with a UHF tag function",
				53504,
				"Error with the Backup function",
				53505,
				"Error with the Backup function (required memory not available)",
				53506,
				"Error when restoring a backup",
				53507,
				"Error when restoring a backup (no backup present)",
				53508,
				"Error when restoring a backup (backup data damaged)",
				53509,
				"Error when restoring the default settings",
				53510,
				"Error with the tag function",
				61441,
				"ISO 15693 Error: Command not supported",
				61442,
				"ISO 15693 Error: Command not detected, e.g. incorrect input format",
				61443,
				"ISO 15693 Error: Command option not supported",
				61455,
				"ISO 15693 Error: Undefined error",
				61456,
				"ISO 15693 Error: Addressed memory area not available",
				61457,
				"ISO 15693 Error: Addressed memory area locked",
				61458,
				"ISO 15693 Error: Addressed memory area locked and not writable",
				61459,
				"ISO 15693 Error: Write operation not successful",
				61460,
				"ISO 15693 Error: Addressed memory area could not be locked",
				61697,
				"Error on air interface: CRC error",
				61698,
				"Error on air interface: Timeout",
				61699,
				"Error on air interface: HF tag error",
				61704,
				"Error on air interface: HF tag outside of the detection range, before all commands could be executed",
				61712,
				"Error on air interface: Tag does not have the expected UID/UII",
				61953,
				"HF read/write head faulty",
				61954,
				"HF read/write head: Error in command execution",
				61956,
				"HF read/write head: Transmission window, check syntax",
				61960,
				"Power supply of the HF read/write head too low",
				61962,
				"HF read/write head: Command code unknown",
				63520,
				"UHF read/write head: The command is not implemented in this device",
				63521,
				"UHF read/write head: Unspecified error",
				63522,
				"UHF read/write head: A valid password is expected before the command is accepted",
				63524,
				"UHF read/write head: No data could be read e.g. no valid Transponder",
				63525,
				"UHF read/write head: Write operation not possible e.g. Transponder is read only",
				63526,
				"UHF read/write head: Verify after write operation failed",
				63527,
				"UHF read/write head: Access to unknown address e.g. memory area out of range",
				63528,
				"UHF read/write head: The data that should be sent is not valid",
				63530,
				"UHF read/write head: The commands needs a long time to execute",
				63532,
				"UHF read/write head: The requested object is not in the persistent memory",
				63533,
				"UHF read/write head: The requested object is not in the volatile memory",
				63541,
				"UHF read/write head: The command is temporary not allowed",
				63542,
				"UHF read/write head: The Opcode is not valid for this type of configuration memory",
				63616,
				"UHF read/write head: No transponder in field",
				63617,
				"UHF read/write head: The EPC in the command does not fit to the EPC in the air interface",
				63618,
				"UHF read/write head: Wrong transponder type in the command",
				63619,
				"UHF read/write head: No success of writing on a block",
				65534,
				"Timeout on RS485",
				65535,
				"Command aborted",
				],
		},
		{
			name:"Tag counter",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:80,
			bitLen:16,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:0,
			enumLen:0,
			defaultValue:0,
			enumValues:
				[
				],
		},
		],
	max_size:96,
	},
	{
		sect_name:"Output",
		num_elems:5,
		datapoints:
		[
		{
			name:"Command code",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:0,
			bitLen:16,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:13,
			defaultValue:0,
			enumValues:
				[
				0,
				"0x0000 Idle",
				1,
				"0x0001 Inventory",
				2,
				"0x0002 Read",
				4,
				"0x0004 Write",
				7,
				"0x0007 Change EPC length and write new EPC (UHF)",
				8,
				"0x0008 Write and Verify",
				64,
				"0x0040 HF Read/write head off",
				65,
				"0x0041 Read/write head identification",
				66,
				"0x0042 Get UHF read/write head status/error",
				80,
				"0x0050 Tag info",
				261,
				"0x0105 Set perma lock",
				512,
				"0x0200 Kill UHF tag",
				32768,
				"0x8000 Reset",
				],
		},
		{
			name:"UHF: Memory area",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:24,
			bitLen:8,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:6,
			defaultValue:0,
			enumValues:
				[
				0,
				"Kill password",
				1,
				"EPC",
				2,
				"TID",
				3,
				"User memory",
				4,
				"Access password",
				5,
				"PC (EPC length)",
				],
		},
		{
			name:"Start address",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:32,
			bitLen:32,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:0,
			enumLen:0,
			defaultValue:0,
			enumValues:
				[
				],
		},
		{
			name:"Length",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:64,
			bitLen:16,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:0,
			enumLen:0,
			defaultValue:0,
			enumValues:
				[
				],
		},
		{
			name:"Length of UID/EPC",
			category:"RFID Module",
			chan_unit:"",
			bitOffset:80,
			bitLen:8,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:0,
			enumLen:0,
			defaultValue:0,
			enumValues:
				[
				],
		},
		],
	max_size:88,
	},
	]
},
{
	mod_name:"RFID read data",
	mod_id:0x840080,
	sections:
	[
	{
		sect_name:"Param",
		num_elems:1,
		datapoints:
		[
		{
			name:"Length of read data",
			category:"RFID read data",
			chan_unit:"",
			bitOffset:0,
			bitLen:16,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:0,
			enumLen:0,
			defaultValue:16,
			enumValues:
				[
				],
		},
		],
	max_size:16,
	},
	{
		sect_name:"Diag",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	{
		sect_name:"Input",
		num_elems:1,
		datapoints:
		[
		{
			name:"Input buffer byte",
			category:"RFID read data",
			chan_unit:"",
			bitOffset:0,
			bitLen:8,
			bitIncremental:8,
			channelNumStart:0,
			channelNumEnd:127,
			dataType:0,
			enumLen:0,
			defaultValue:0,
			enumValues:
				[
				],
		},
		],
	max_size:1024,
	},
	{
		sect_name:"Output",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	]
},
{
	mod_name:"RFID write data",
	mod_id:0x21080,
	sections:
	[
	{
		sect_name:"Param",
		num_elems:1,
		datapoints:
		[
		{
			name:"Length of write data",
			category:"RFID write data",
			chan_unit:"",
			bitOffset:0,
			bitLen:16,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:0,
			enumLen:0,
			defaultValue:16,
			enumValues:
				[
				],
		},
		],
	max_size:16,
	},
	{
		sect_name:"Diag",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	{
		sect_name:"Input",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	{
		sect_name:"Output",
		num_elems:1,
		datapoints:
		[
		{
			name:"Output buffer byte",
			category:"RFID write data",
			chan_unit:"",
			bitOffset:0,
			bitLen:8,
			bitIncremental:8,
			channelNumStart:0,
			channelNumEnd:127,
			dataType:0,
			enumLen:0,
			defaultValue:0,
			enumValues:
				[
				],
		},
		],
	max_size:1024,
	},
	]
},
{
	mod_name:"Module status",
	mod_id:0x80000,
	sections:
	[
	{
		sect_name:"Param",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	{
		sect_name:"Diag",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	{
		sect_name:"Input",
		num_elems:6,
		datapoints:
		[
		{
			name:"I/O-ASSISTANT Force Mode active",
			category:"Module state",
			chan_unit:"",
			bitOffset:14,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Undervoltage V1",
			category:"Module state",
			chan_unit:"",
			bitOffset:9,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Undervoltage V2",
			category:"Module state",
			chan_unit:"",
			bitOffset:7,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Module diagnostics available",
			category:"Module state",
			chan_unit:"",
			bitOffset:0,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"Internal error",
			category:"Module state",
			chan_unit:"",
			bitOffset:10,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		{
			name:"ARGEE program active",
			category:"Module state",
			chan_unit:"",
			bitOffset:1,
			bitLen:1,
			bitIncremental:0,
			channelNumStart:0,
			channelNumEnd:0,
			dataType:1,
			enumLen:2,
			defaultValue:0,
			enumValues:
				[
				0,
				"-",
				1,
				"active",
				],
		},
		],
	max_size:15,
	},
	{
		sect_name:"Output",
		num_elems:0,
		datapoints:
		[
		],
	max_size:0,
	},
	]
},
];
